/**
 * Copyright © 2024 Marcelo H Moraes
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the “Software”), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#include "streamDeco_objects.hpp"

namespace streamDeco
{

    /**
     * @brief  Process event generated by buttons and send keyboard shortcuts com PC
     * @param  button_event  Each button send a different event
     * @param  settings      Reference to settings variables
     * @note   This function is called by button handler on file streamDeco_HandlerButtons.cpp
     */
    void process_event(uint32_t button_event, settings_t *settings)
    {

        /** @brief  Each code do diferrent things on this switch case
         *          the keyboard code sended by bleKeyborad is configured herer
         **/
        switch (button_event)
        {

            /* --- MAIN CANVAS --- */

            /* First row buttons */

            /**
             * @brief    Terminal button is pressed
             * @details  Open a terminal
             * @note     Need configuration on application or system
             **/
        case terminal_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press(KEY_RETURN);
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Files button is pressed
         *  @details  Open file manager
         *  @note     This media shortcut may work by default on Windows and Linux
         **/
        case files_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press('e');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Web button is pressed
         *  @details  Open web browser
         *  @note     This media shortcut may work by default on Windows
         *            On Linux need configuration on system
         **/
        case web_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press('w');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Search button is pressed
         *  @details  Open search feature
         *  @note     This media shortcut may work by default on Windows 11 and Linux KDE Plasma
         **/
        case search_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press(' ');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Applications button receive a short click
         *  @details  This event will:
         *              Unpin the Applications canvas
         *              Hidden Multimedia and Configurations canvas
         *              Change de hidden state of Applications canvas
         *  @note     The canvas will be hidden automaticaly after time defined on timer uiReset
         *            or with other short click on Applications button
         *            Do nothing if Multimedia or Configurations canvas is pinned
         **/
        case applications_canvas_event:
            if (button.multimedia_canvas.pinned() || button.configurations_canvas.pinned())
            {
                break;
            }
            button.applications_canvas.unpin();
            canvas.multimedia.hidden();
            canvas.configurations.hidden();
            canvas.monitor.hidden();
            canvas.applications.change_hidden();
            break;

        /** @brief    Applications button receive a long click
         *  @details  This event will:
         *              Fixe and unhidden the Applications canvas
         *              Hidden Multimedia and Configurations canvas
         *            A pinned canvas will not be hidden until a short click on Applications button
         *  @note     Do nothing if Multimedia or Configurations canvas is pinned
         **/
        case applications_canvas_fix_event:
            if (button.multimedia_canvas.pinned() || button.configurations_canvas.pinned())
            {
                break;
            }
            button.applications_canvas.pin();
            canvas.multimedia.hidden();
            canvas.monitor.hidden();
            canvas.configurations.hidden();
            canvas.applications.unhidden();
            break;

        /* Second row buttons */

        /** @brief    Multimedia_prev button is pressed
         *  @details  Backward media on pcanvas
         *  @note     This media shortcut may work by default on Windows and Linux
         **/
        case multimedia_prev_event:
            bleKeyboard.write(KEY_MEDIA_PREVIOUS_TRACK);
            break;

        /** @brief    Multimedia_play button is pressed
         *  @details  Play or pause media on player
         *  @note     This media shortcut may work by default on Windows and Linux
         *            This button have two icons, play_simp and pause_simp
         *            SwapIcon method change between this two icons
         *            Also the button is destaqued when pressed,
         *            but have no feedback from computer music player to indentify if media is playing or paused
         */
        case multimedia_play_event:
            bleKeyboard.write(KEY_MEDIA_PLAY_PAUSE);
            button.multimedia_play.swapIcon();
            button.multimedia_play.pinned() ? button.multimedia_play.unpin() : button.multimedia_play.pin();
            break;

        /** @brief    Multimedia_next button is pressed
         *  @details  Forward media on player
         *  @note     This media shortcut may work by default on Windows and Linux
         **/
        case multimedia_next_event:
            bleKeyboard.write(KEY_MEDIA_NEXT_TRACK);
            break;

        /** @brief    Multimedia_mic button is pressed
         *  @details  Mute and unmute the microphone
         *  @note     This media shortcut need be configured in application or system
         *            This button have two icons, mic_on_simp and mic_off_simp
         *            SwapIcon method change between this two icons
         *            Also the button is destaqued when pressed,
         *            but have no feedback from computer to indentify the microphone state
         */
        case multimedia_mic_event: /*  */
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press(KEY_F2);
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            button.multimedia_mic.swapIcon();
            button.multimedia_mic.pinned() ? button.multimedia_mic.unpin() : button.multimedia_mic.pin();
            break;

        /** @brief    Multimedia button receive a short click
         *  @details  This event will:
         *              Unpin the Multimedia canvas
         *              Hidden Applications and Configurations canvas
         *              Change de hidden state of Multimedia canvas
         *            The canvas will be hidden automaticaly after time defined on timer uiReset
         *            or with other short click on Multimedia button
         *  @note     Do nothing if Applications or Configurations canvas is pinned
         **/
        case multimedia_canvas_event: /* multimedia button receive a short click */
            if (button.applications_canvas.pinned() || button.configurations_canvas.pinned())
            {
                break;
            }
            button.multimedia_canvas.unpin();
            canvas.applications.hidden();
            canvas.configurations.hidden();
            canvas.monitor.hidden();
            canvas.multimedia.change_hidden();
            break;

        /** @brief    Multimedia button receive a long click
         *  @details  This event will:
         *              Fixe and unhidden the Multimedia canvas
         *              Hidden Applications and Configurations canvas
         *            A pinned canvas will not be hidden until a short click on Multimedia button
         *  @note     Do nothing if Applications or Configurations canvas is pinned
         **/
        case multimedia_canvas_fix_event:
            if (button.applications_canvas.pinned() || button.configurations_canvas.pinned())
            {
                break;
            }
            button.multimedia_canvas.pin();
            canvas.applications.hidden();
            canvas.configurations.hidden();
            canvas.monitor.hidden();
            canvas.multimedia.unhidden();
            break;

        /* Third row buttons */

        /** @brief    Prev_workspace button is pressed
         *  @details  Go to left workspace if exsist
         *  @note     This shortcut may work by default on Windows 11
         *            On Linux need configuration on system
         **/
        case left_workspace_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press(KEY_LEFT_ARROW);
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

            /** @brief    Next_workspace button is pressed
             *  @details  Go to right workspace if exsist
             *  @note     This shortcut may work by default on Windows 11
             *            On Linux need configuration on system
             **/
        case right_workspace_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press(KEY_RIGHT_ARROW);
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Pin_window button is pressed
         *  @details  Pin the active window on canvas
         *  @note     Need configuration on application or system
         *            The button is destaqued when pressed,
         *            but have no feedback from computer to indentify a pinnned window
         **/
        case pin_window_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press('t');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            button.pin.swapIcon();
            button.pin.pinned() ? button.pin.unpin() : button.pin.pin();
            break;

        /** @brief    Lock_computer button is pressed
         *  @details  Lock the computer
         *  @note     This shortcut may work by default on Windows and Linux
         **/
        case lock_computer_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press('l');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Configurations button receive a short click
         *  @details  This event will:
         *              Hidden Applications and Multimedia canvas
         *              Change de hidden state of Configurations canvas
         *            The canvas will be hidden automaticaly after time defined on timer uiReset
         *            or with other short click on Configurations button
         *  @note     Do nothing if Applications or Multimedia canvas is pinned
         *            The Configurations canvas have no pin function
         **/
        case configurations_canvas_event: /* configuration button is pressed */
            if (button.applications_canvas.pinned() || button.multimedia_canvas.pinned())
            {
                break;
            }
            button.configurations_canvas.unpin();
            canvas.applications.hidden();
            canvas.multimedia.hidden();
            if(canvas.monitor.is_hidden()) {
                canvas.configurations.change_hidden();
            } else {
                canvas.configurations.hidden();
            }
            canvas.monitor.hidden();
            break;
        
        /** @brief    Configurations button receive a long click
         *  @details  This event will:
         *              Fixe and unhidden the Monitor canvas
         *              Hidden Applications, Multimeida and Configurations canvas
         *            A pinned canvas will not be hidden until a short click on Configurations button
         *  @note     Do nothing if Applications or Multimedia canvas is pinned
         **/
        case configurations_canvas_fix_event: /* configuration button is pressed */
            if (button.applications_canvas.pinned() || button.multimedia_canvas.pinned())
            {
                break;
            }
            button.configurations_canvas.pin();
            canvas.applications.hidden();
            canvas.multimedia.hidden();
            canvas.configurations.hidden();
            canvas.monitor.unhidden();
            break;

            /* --- APPLICATIONS CANVAS --- */

        /** @brief    App1 button is pressed
         *  @details  GOG.com Icon to launch GOG Galaxy desktop application
         *  @note     Need configuration on application or system
         **/
        case applications_canvas_app1_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('9');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    App2 button is pressed
         *  @details  Discord Icon to launch Discord desktop application
         *  @note     Need configuration on application or system
         **/
        case applications_canvas_app2_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('0');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    App3 button is pressed
         *  @details  FPS Icon to show metrics
         *  @note     Need configuration on application or system
         **/
        case applications_canvas_app3_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('8');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    App4 button is pressed
         *  @details  VSCode Icon to launch VSCode desktop application
         *  @note     Need configuration on application or system
         **/
        case applications_canvas_app4_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press('c');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    App5 button is pressed
         *  @details  Tex Icon to launch LaTeX IDE desktop application
         *  @note     Need configuration on application or system
         **/
        case applications_canvas_app5_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press('t');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    App6 button is pressed
         *  @details  Calculator Icon to launch calculator desktop application
         *  @note     This shortcut may work by default on Windows and Linux
         **/
        case applications_canvas_app6_event:
            bleKeyboard.write(KEY_MEDIA_CALCULATOR);
            break;

        /** @brief    App7 button is pressed
         *  @details  In VScode build PlatformIO project
         *  @note     This shortcut may work by default on VSCode PlatformIO extension
         **/
        case applications_canvas_app7_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_ALT);
            bleKeyboard.press('b');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    App8 button is pressed
         *  @details  In VScode upload PlatformIO project to microcontroler or SoC
         *  @note     This shortcut may work by default on VSCode PlatformIO extension
         **/
        case applications_canvas_app8_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_ALT);
            bleKeyboard.press('u');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    App9 button is pressed
         *  @details  In VScode open serial monitor on PlatformIO
         *  @note     This shortcut may work by default on VSCode PlatformIO extension
         **/
        case applications_canvas_app9_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_ALT);
            bleKeyboard.press('s');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /* --- MULTIMEDIA CANVAS --- */

        /** @brief    Mult1 button is pressed
         *  @details  Start or pause a record screen
         *  @note     Need configuration on application or system
         **/
        case multimedia_canvas_mult1_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('e');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            button.mult1.swapIcon();
            button.mult1.pinned() ? button.mult1.unpin() : button.mult1.pin(); 
            break;

        /** @brief    Mult2 button is pressed
         *  @details  Mute mic on record
         *  @note     Need configuration on application or system
         **/
        case multimedia_canvas_mult2_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('m');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            button.mult2.swapIcon();
            button.mult2.pinned() ? button.mult2.unpin() : button.mult2.pin();
            break;

        /** @brief    Mult3 button is pressed
         *  @details  Enable or disable webcam
         *  @note     Need configuration on application or system
         **/
        case multimedia_canvas_mult3_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('c');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            button.mult3.swapIcon();
            button.mult3.pinned() ? button.mult3.unpin() : button.mult3.pin();
            break;

        /** @brief    Mult4 button is pressed
         *  @details  Add clip
         *  @note     Need configuration on application or system
         **/
        case multimedia_canvas_mult4_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('r');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Mult5 button is pressed
         *  @details  Ripple track
         *  @note     Need configuration on application or system
         **/
        case multimedia_canvas_mult5_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('t');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Mult6 button is pressed
         *  @details  Roll track
         *  @note     Need configuration on application or system
         **/
        case multimedia_canvas_mult6_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('k');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Mult7 button is pressed
         *  @details  Backward track
         *  @note     Need configuration on application or system
         **/
        case multimedia_canvas_mult7_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('i');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Mult8 button is pressed
         *  @details  Play/Pause track
         *  @note     Need configuration on application or system
         **/
        case multimedia_canvas_mult8_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('o');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Mult9 button is pressed
         *  @details  Forward track
         *  @note     Need configuration on application or system
         **/
        case multimedia_canvas_mult9_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press('p');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /* --- CONFIGURATIONS CANVAS --- */

        /** @brief    Volmut button is pressed
         *  @details  Mute sound volume
         *  @note     This media shortcut may work by default on Windows and Linux
         **/
        case configuration_canvas_volmut_event:
            bleKeyboard.write(KEY_MEDIA_MUTE);
            break;

        /** @brief    Voldown button is pressed
         *  @details  Lower the sound volume
         *  @note     This media shortcut may work by default on Windows and Linux
         **/
        case configuration_canvas_voldown_event:
            bleKeyboard.write(KEY_MEDIA_VOLUME_DOWN);
            task.buttons.takeNotify();
            break;
        
        /** @brief    Volup button is pressed
         *  @details  Rise sound volume
         *  @note     This media shortcut may work by default on Windows and Linux
         **/
        case configuration_canvas_volup_event:
            bleKeyboard.write(KEY_MEDIA_VOLUME_UP);
            task.buttons.takeNotify();
            break;

        /** @brief    Colorbackground button is pressed
         *  @details  Change background color
         *  @note     Background colors are allocated in vector colors_background in streamDeco_settings.cpp file
         *            You can add colors in this vector
         **/
        case configuration_canvas_colorbackground_event:
            settings->color_background = settings::backgroundColor();
            lvgl::screen::set_bg_color(settings->color_background);
            break;

        /** @brief    Colorbutton button is pressed
         *  @details  Change button color
         *  @note     Buttons colors are allocated in vector colors_button in streamDeco_settings.cpp file
         *            You can add colors in this vector
         **/
        case configuration_canvas_colorbutton_event:
            settings->color_buttons = settings::buttonColor();
            change_color_buttons(settings->color_buttons);
            lvgl::screen::refresh();
            break;

        /** @brief    Sysmon button is pressed
         *  @details  Launch system monitor
         *  @note     This shortcut may work by default on Windows 10 or 11
         *            On Linux need configuration on system
         **/
        case configuration_canvas_sysmonitor_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press(KEY_ESC);
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Sysconf button is pressed
         *  @details  Launch system configuration panel
         *  @note     This shortcut may work by default on Windows 10 or 11
         *            On Linux need configuration on system
         **/
        case configuration_canvas_sysconfig_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press(KEY_ESC);
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Reboot button is pressed
         *  @details  Reboot the computer
         *  @note     Need configuration on system or application
         **/
        case configuration_canvas_reboot_event:
            bleKeyboard.press(KEY_LEFT_GUI);
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_SHIFT);
            bleKeyboard.press(KEY_ESC);
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Shuntdown button is pressed
         *  @details  Shuntdown the computer
         *  @note     Need configuration on system or application
         **/
        case configuration_canvas_shutdown_event:
            bleKeyboard.press(KEY_LEFT_CTRL);
            bleKeyboard.press(KEY_LEFT_ALT);
            bleKeyboard.press('k');
            rtos::sleep(10ms);
            bleKeyboard.releaseAll();
            break;

        /** @brief    Rotate screen button is pressed
         *  @details  Rotate the streamDeco screen
         *  @note     Work in progress
         **/
        case configuration_canvas_rotate_screen_event:
            // change_rotation();
            break;

        /** @brief    Backlight bright control slider change value
         *  @details  Set new value to backlight bright
         **/
        case slider_backlight_bright_value_change_event:
            settings->lcd_bright = slider.backlightbright_slider.get_value();
            break;

        } // end switch case

    } // end process event

} // namespace streamDeco